/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package net.creativeidesign.timekeeper_v1.GUI;
import javax.swing.JOptionPane;
import net.creativeidesign.timekeeper_v1.ToDoItemModel;
import net.creativeidesign.timekeeper_v1.db.DerbyDB;

/**
 *
 * @author Pi
 */
public class AddEditItem extends javax.swing.JInternalFrame {
    private int currentItemId;
    /**
     * Creates new form AddEditItem
     */
    public AddEditItem() {
        initComponents();
    }
    /*
    * Created an edit option
    */
    public AddEditItem(int id) {
        initComponents();
        currentItemId = id;
        serializeModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        taskTitleTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionTextArea = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        daySpinner = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        monthSpinner = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        yearSpinner = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        importantRBtn = new javax.swing.JRadioButton();
        notImportantRBtn = new javax.swing.JRadioButton();
        saveBtn = new javax.swing.JButton();
        resetBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();

        setIconifiable(true);
        setTitle("Task preview");
        setToolTipText("Task preview");

        jLabel1.setFont(new java.awt.Font("Century Schoolbook", 0, 14)); // NOI18N
        jLabel1.setText("Task Title");

        jLabel2.setFont(new java.awt.Font("Century Schoolbook", 0, 14)); // NOI18N
        jLabel2.setText("Description");

        descriptionTextArea.setColumns(20);
        descriptionTextArea.setRows(5);
        jScrollPane1.setViewportView(descriptionTextArea);

        jLabel3.setFont(new java.awt.Font("Century Schoolbook", 0, 14)); // NOI18N
        jLabel3.setText("Finish Date");

        jLabel4.setFont(new java.awt.Font("Century Schoolbook", 0, 14)); // NOI18N
        jLabel4.setText("Day");

        daySpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 31, 1));

        jLabel5.setFont(new java.awt.Font("Century Schoolbook", 0, 14)); // NOI18N
        jLabel5.setText("Month");

        monthSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));

        jLabel6.setFont(new java.awt.Font("Century Schoolbook", 0, 14)); // NOI18N
        jLabel6.setText("Year");

        yearSpinner.setModel(new javax.swing.SpinnerNumberModel(14, 14, 99, 1));

        jLabel7.setFont(new java.awt.Font("Century Schoolbook", 0, 14)); // NOI18N
        jLabel7.setText("Priority");

        buttonGroup1.add(importantRBtn);
        importantRBtn.setFont(new java.awt.Font("Century Schoolbook", 0, 14)); // NOI18N
        importantRBtn.setText("Important");
        importantRBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                importantRBtnActionPerformed(evt);
            }
        });

        buttonGroup1.add(notImportantRBtn);
        notImportantRBtn.setFont(new java.awt.Font("Century Schoolbook", 0, 14)); // NOI18N
        notImportantRBtn.setText("Not Important");
        notImportantRBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                notImportantRBtnActionPerformed(evt);
            }
        });

        saveBtn.setBackground(new java.awt.Color(51, 204, 0));
        saveBtn.setFont(new java.awt.Font("Century Schoolbook", 1, 12)); // NOI18N
        saveBtn.setText("Save");
        saveBtn.setToolTipText("Save as new Task");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        resetBtn.setBackground(new java.awt.Color(255, 255, 0));
        resetBtn.setFont(new java.awt.Font("Century Schoolbook", 1, 12)); // NOI18N
        resetBtn.setText("Reset");
        resetBtn.setToolTipText("Reset the input fields");
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });

        cancelBtn.setBackground(new java.awt.Color(255, 51, 51));
        cancelBtn.setFont(new java.awt.Font("Century Schoolbook", 1, 12)); // NOI18N
        cancelBtn.setText("Cancel");
        cancelBtn.setToolTipText("Cancel / Exit ");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(19, 19, 19)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(taskTitleTextField)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(saveBtn)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel7))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(importantRBtn)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(notImportantRBtn))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(daySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(4, 4, 4)
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(monthSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel6)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(yearSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(resetBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelBtn)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(taskTitleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4))
                    .addComponent(daySpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(monthSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(yearSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(importantRBtn)
                    .addComponent(jLabel7)
                    .addComponent(notImportantRBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(saveBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resetBtn)
                    .addComponent(cancelBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void importantRBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_importantRBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_importantRBtnActionPerformed

    private void notImportantRBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_notImportantRBtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_notImportantRBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        System.out.println("This Was fired");
        ToDoItemModel newItem = validateValues();
        System.out.println(newItem);
        if(newItem != null){
            DerbyDB db = new DerbyDB();
            
            System.out.println(db);
            //db.createItemInDB(newItem) returns false cos statment no resultSet
            if(currentItemId != 0 ? !db.updateItemInDB(currentItemId, newItem) : !db.createItemInDB(newItem)){
                //notify success (otions new || close)
                getUserApproved("Would You like to create another entry?", 1);
            }else{
                //notify tryAgain
                System.out.println("Save to db failed");
            }
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        getUserApproved("Woudl you like to reset the input fields?", 2);
    }//GEN-LAST:event_resetBtnActionPerformed

    
    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        if((descriptionTextArea.getText().length() > 0) || (taskTitleTextField.getText().length() > 0))
            getUserApproved("The task is not saved, would you like to close without saving?", 3);
        else
            closeWindow();
    }//GEN-LAST:event_cancelBtnActionPerformed
    
    //reusable JOptionPane method
    private void getUserApproved(String msg, int type){
        int dialogButton = JOptionPane.YES_NO_OPTION;
        int dialogResult = JOptionPane.showConfirmDialog (null, msg, "Warning", dialogButton);
        if(dialogResult == JOptionPane.YES_OPTION){
            switch(type){
                //user selected reset after new item added
                case 1:
                    resetFields();
                    break;
                //user selected reset after resetBtn click
                case 2:
                    resetFields();
                    break;
                //user selected exit after cancelBtn click
                case 3:
                    closeWindow();
                    break;
            }//end switch(type)
        }else{
            switch(type){
                //exit after new item input
                case 1:
                    closeWindow();
                    break;
            }//end switch(type)
        }//end if(dialogResult == JOptionPane.YES_OPTION)
    }
    
    private void closeWindow(){
        this.dispose();
    }
    
    private void resetFields(){
        taskTitleTextField.setText(null);
        descriptionTextArea.setText(null);
    }
    
    // this will load the model if this is an edit call
    private void serializeModel(){
        ToDoItemModel currentItem = new ToDoItemModel();
        DerbyDB db = new DerbyDB();
        currentItem = db.findItemInDB(currentItemId);
        
        taskTitleTextField.setText(currentItem.getStrTitle());
        descriptionTextArea.setText(currentItem.getStrDescription());
        
        //break the date into parts
        String[] str3DateBits = currentItem.getDtDateUntil().split("-");
        //currentItem.getDtDateUntil().substring(Math.max(currentItem.getDtDateUntil().length() - 2, 0));
        
        daySpinner.setValue(Integer.parseInt(str3DateBits[2]));
        monthSpinner.setValue(Integer.parseInt(str3DateBits[1]));
        yearSpinner.setValue(Integer.parseInt(str3DateBits[0].substring(Math.max(str3DateBits[0].length() - 2, 0))));
        
        //set the radiobuttons [important, not important]
        if(currentItem.getiCategory() == 1)
            importantRBtn.setSelected(true);
        else if(currentItem.getiCategory() == 2)
            notImportantRBtn.setSelected(true);
    }
    
    /*
    * From here it is modelControl methods
    */
    
    //basic validation
    //required is the title only
    private ToDoItemModel validateValues(){
        boolean isValid = false;
        ToDoItemModel resultModel = new ToDoItemModel();
        //validate Title
        if(taskTitleTextField.getText().length() != 0)
        {
            resultModel.setStrTitle(taskTitleTextField.getText());
            isValid = true;
        }else{
            //fire allert
        }
        //get values from user input fields
        String inputFinishDate = ((Integer)yearSpinner.getValue() + 2000)
                            + "-" + (Integer)monthSpinner.getValue()
                            + "-" +(Integer)daySpinner.getValue();
        
        int inputCategory = importantRBtn.isSelected()  ? 1 : 2;
        
        //assigne values to model
        resultModel.setStrDescription(descriptionTextArea.getText());
        resultModel.setDtDateUntil(inputFinishDate);
        resultModel.setiCategory(inputCategory);
        
        if(isValid)
            return resultModel;
        else
            return null;
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JSpinner daySpinner;
    private javax.swing.JTextArea descriptionTextArea;
    private javax.swing.JRadioButton importantRBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSpinner monthSpinner;
    private javax.swing.JRadioButton notImportantRBtn;
    private javax.swing.JButton resetBtn;
    private javax.swing.JButton saveBtn;
    private javax.swing.JTextField taskTitleTextField;
    private javax.swing.JSpinner yearSpinner;
    // End of variables declaration//GEN-END:variables
}
